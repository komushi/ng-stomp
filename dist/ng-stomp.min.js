!function(s){"use strict";"object"==typeof exports?module.exports=s("undefined"!=typeof angular?angular:require("angular"),"undefined"!=typeof SockJS?SockJS:require("SockJS"),"undefined"!=typeof Stomp?Stomp:require("Stomp")):"function"==typeof define&&define.amd?define(["angular","SockJS","Stomp"],s):s(angular,SockJS,Stomp)}(function(s,t,e){"use strict";s.module("ngStomp",[]).service("$stomp",["$rootScope","$q",function(s,o){function n(s){var t=document.createElement("a");return t.href=s,t}this.stomps={},this.connect=function(s,i,r){r=r||{};var u=o.defer();if("ws:"===n(i).protocol||"wss:"===n(i).protocol){var c=new WebSocket(i);this.stomps[s]=e.over(c),this.stomps[s].subs={},this.stomps[s].debug=null}else{var p=new t(i);this.stomps[s]=e.over(p),this.stomps[s].subs={},this.stomps[s].debug=null}return this.stomps[s].connect(r,function(s){u.resolve(s)},function(s){u.reject(s)}),u.promise},this.disconnect=function(s){var t=o.defer();if(this.stomps[s]&&this.stomps[s].connected){for(var e in this.stomps[s].subs)this.unsubscribe(s,e);this.stomps[s].disconnect(t.resolve)}else t.resolve();return t.promise},this.subscribe=this.on=function(s,t,e){e=e||{};var n=o.defer();return this.stomps[s]&&this.stomps[s].connected&&(this.stomps[s].subs[t]||(this.stomps[s].subs[t]=this.stomps[s].subscribe(t,function(s){n.notify(s)},e))),n.promise},this.unsubscribe=this.off=function(s,t){this.stomps[s]&&this.stomps[s].connected&&this.stomps[s].subs[t]&&(this.stomps[s].subs[t].unsubscribe(),delete this.stomps[s].subs[t])},this.send=function(s,t,e,n){var i=o.defer();try{var r=JSON.stringify(e);n=n||{},this.stomps[s].send(t,n,r),i.resolve()}catch(s){i.reject(s)}return i.promise}}])});